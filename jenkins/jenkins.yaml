credentials:
  system:
    domainCredentials:
      - credentials:
          - usernamePassword:
              description: "Github Username Password"
              id: "github-pw"
              password: "${secrets-github-password}"
              scope: GLOBAL
              username: "${secrets-github-username}"
          - string:
              description: "Pivnet API Token"
              id: "pivnet-api-token"
              scope: GLOBAL
              secret: "${secrets-pivnet-api-token-secret}"
          - string:
              description: "Pivnet Legacy Token"
              id: "pivnet-legacy-token"
              scope: GLOBAL
              secret: "${secrets-pivnet-legacy-token}"
          - usernamePassword:
              description: "Docker Hub"
              id: "dockerhub-pw"
              password: "${secrets-dockerhub-password}"
              scope: GLOBAL
              username: "${secrets-dockerhub-username}"
          - string:
              description: "Github Access Token"
              id: "github-token"
              scope: GLOBAL
              secret: "${secrets-github-access-token-secret}"
jenkins:
  agentProtocols:
    - "JNLP4-connect"
    - "Ping"
  authorizationStrategy: "loggedInUsersCanDoAnything"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: false
  disableRememberMe: false
  mode: NORMAL
  myViewsTabBar: "standard"
  numExecutors: 2
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm:
    local:
      allowsSignup: false
      enableCaptcha: false
      users:
        - id: "${secrets-admin-username}"
          password: "${secrets-admin-password}"
  slaveAgentPort: 50000
  updateCenter:
    sites:
      - id: "default"
        url: "https://updates.jenkins.io/update-center.json"
  views:
    - all:
        name: "all"
  viewsTabBar: "standard"
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  sSHD:
    port: -1
unclassified:
  bitbucketEndpointConfiguration:
    endpoints:
      - bitbucketCloudEndpoint:
          enableCache: false
          manageHooks: false
          repositoriesCacheDuration: 0
          teamCacheDuration: 0
  buildDiscarders:
    configuredBuildDiscarders:
      - "jobBuildDiscarder"
  defaultFolderConfiguration:
    healthMetrics:
      - worstChildHealthMetric:
          recursive: true
  gitHubConfiguration:
    apiRateLimitChecker: ThrottleOnOver
  gitHubPluginConfig:
    configs:
      - credentialsId: "github-access-token"
        name: "Github"
    hookUrl: "${secrets-github-webhook}"
  gitSCM:
    createAccountBasedOnEmail: false
    globalConfigEmail: "${secrets-admin-email}"
    globalConfigName: "${secrets-admin-name}"
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
  location:
    adminAddress: "${secrets-admin-name} <${secrets-admin-email}>"
    url: "${secrets-location}"
  mailer:
    charset: "UTF-8"
    useSsl: false
  pollSCM:
    pollingThreadCount: 10
tool:
  git:
    installations:
      - home: "git"
        name: "Default"
jobs:
  - script: >
      pipelineJob('Seed') {

        def repo = 'https://github.com/yogendra/jenkins.git'

        triggers {
          scm('H/5 * * * *')
        }
        description("Pipeline for $repo")

        definition {
          cpsScm {
            scm {
              git {
                remote { url(repo) }
                branches('master', '**/feature*')
                scriptPath('Jenkinsfile')
                extensions { }  // required as otherwise it may try to tag the repo, which you may not want
              }       
            }
          }
        }
      }
